@page "/fetchdata"
@inject HttpClient Http

<h1>All blog posts.</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (blogposts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Title</th>
                <th>Text</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var (id, blog) in blogposts)
            {
                <tr>
                    <td>@blog.Date.ToShortTimeString()</td>
                    <td>@blog.Title</td>
                    <td>@blog.Text.Substring(0,blog.Text.Length > 100 ? 100 : blog.Text.Length)</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Dictionary<int, BlogPostModel> blogposts;

    protected override async Task OnInitializedAsync()
    {
        //HttpMessageHandler msh = new HttpClientHandler();
        //WebRequestHandler wrh = new WebRequestHandler();
        HttpClient hpc = new HttpClient(); // msh);
        string url = @"https://m4cxf4xb70.execute-api.eu-west-2.amazonaws.com/Prod/";
        /*
        HttpRequestMessage hrm = new HttpRequestMessage
        {
            Method = HttpMethod.Get,
            RequestUri = new Uri(url)
        };
        hrm.SetBrowserRequestMode(BrowserRequestMode.Cors);

        //hrm.Headers.Add("Access-Control-Allow-Origin", "*");
        //hrm.Headers.Add("Origin", "https://localhost:5001");

        var thingresp = await hpc.SendAsync(hrm);
        string thingstr = await thingresp.Content.ReadAsStringAsync();
        */

        string thingstr = await hpc.GetStringAsync(url);

        //if (thingresp.StatusCode == System.Net.HttpStatusCode.OK)
        //{
            var things = JsonSerializer.Deserialize<BlogPostURL[]>(thingstr);
            blogposts = new Dictionary<int, BlogPostModel>();
            blogposts.Add(1, new BlogPostModel
            {
                Title = "Yep OK!",
                Text = $"Status {thingstr.Length}",
                Hash = "",
                Date = DateTime.Now,
                Status = true,
                Version = 0
            });
        //}
        //else
        //{
        //    blogposts = new Dictionary<int, BlogPostModel>();
        //    blogposts.Add(1, new BlogPostModel
        //    {
        //        Title = "Nope, exception",
        //        Text = $"Status {thingresp.StatusCode}",
        //        Hash = "",
        //        Date = DateTime.Now,
        //        Status = true,
        //        Version = 0
        //    });
        //}


    }
}
